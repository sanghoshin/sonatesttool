[DEFAULT]
network_cnt = 10
subnet_cnt = 10
instance_cnt = 10
securitygroup_cnt = 10
rule_cnt = 10
router_cnt = 10
report_path =

;log_path = /tmp
;log_file = sona.log


[nova_tail]
hostname = 10.10.2.76
username = root
password = root
filename = /var/log/nova/*.log

[neutron_tail]
hostname = 10.10.2.76
username = root
password = root
filename = /var/log/neutron/*.log

[onos]
user_id = karaf
password = karaf
ssh_port = 8101
instance1_ip = 10.10.106.118

[net_auth]
username = admin
password = admin
tenant_name = admin
domain_id = default
auth_url = http://controller:5000/v2.0

[nova_auth]
version = 2
username = admin
api_key = admin
project_id = admin
auth_url = http://controller:5000/v2.0


[network]
; network configuration example
;  - network: (mandatory)
;  - name: (option:string)
;  - admin_state_up:  (option:boolean) The administrative state of the network
;  - provider:network_type: (option:vxlan,flat,vlan..)
;  - provider:segmentation_id: (option:int) Vlan or Vxlan ID
;  - router:external: (option:boolean) Indicates whether this network is externally accessible.

network1 = {'name': 'ext-net',
            'admin_state_up': True,
            'router:external': True,
            'provider:network_type': 'flat',
            'provider:physical_network': 'external'}

network2 = {'name': '172-net',
            'admin_state_up': True,
            'provider:network_type': 'vxlan',
            'provider:segmentation_id': 1024}

network3 = {'name': 'test-net1',
            'admin_state_up': True,
            'provider:network_type': 'vxlan',
            'provider:segmentation_id': 1027}

[subnet]
; TODO
; Write Explain for subnet options
subnet1 = {'name': 'ext-subnet',
           'cidr': '192.168.0.0/24',
           'gateway_ip': '192.168.0.1',
           'ip_version': 4}

subnet2 = {'name': 'test-subnet1',
           'cidr': '172.1.0.0/24',
           'gateway_ip': '172.1.0.1',
           'ip_version': 4}

subnet3 = {'name': 'test-subnet2',
           'cidr': '172.2.0.0/24',
           'gateway_ip': '172.2.0.1',
           'ip_version': 4}

[security_group]
;sg1 = {'security_group': {'name': 'new-sg', 'description': 'Test Tool SG'}}
sg1 = {'name': 'new-sg', 'description': 'Test Tool SG'}
sg2 = {'name': 'test-sg', 'description': 'Test Tool SG'}

[security_group_rule]
rule1 = {'direction': 'ingress',
         'port_range_min': '22',
         'ethertype': 'IPv4',
         'port_range_max': '22',
         'protocol': 'tcp'}

rule2 = {'direction': 'ingress',
         'ethertype': 'IPv4',
         'protocol': 'icmp'}

rule3 = {'direction': 'ingress',
         'port_range_min': '80',
         'ethertype': 'IPv4',
         'port_range_max': '80',
         'protocol': 'tcp'}

[instance]
instance1 = {'name': 'c1vm1',
             'image': 'cirros-0.3.4-x86_64',
             'flavor': 'm1.tiny',
             'zone': 'compute1',
             'securitygroups': ['']}

instance2 = {'name': 'c1vm2',
            'image': 'cirros-0.3.4-x86_64',
            'flavor': 'm1.tiny',
            'zone': 'compute1',
            'securitygroups': ['sg1', 'sg2', 'sg3']}

[router]
router1 = {'name': '172.1-router'}


